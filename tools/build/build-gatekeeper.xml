<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Help"  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!-- Import required targets and configuration items. -->
	<Import Project="bin\MSBuild.Community.Tasks.Targets"/>
	<Import Project="build.config"/>

	<!--
		Determine directory tree and subversion URLs from user input values.

		  source - Location of source code
		  output - Holding bin for compiled binaries.
		  staging - Copy of all files to be deployed (i.e. without source code).
	-->
	<PropertyGroup>
		<SourceLocation>$(WORKSPACE)</SourceLocation>

		<TempBase>$(TEMP)\Build-$(BUILD_NUMBER)</TempBase>
		
		<OutputFolder>$(TempBase)\output\</OutputFolder>
		<StagingLocation>$(TempBase)\staging\</StagingLocation>
		
		<BuildName>$(branch)-$(TargetEnvironment)-$(BUILD_NUMBER)</BuildName>
	</PropertyGroup>
  
	<!--
		File lists used by the Build target.  See comments in the target
		for details.
	-->
	<ItemGroup>
		<NonDeployedFiles Include="$(SourceLocation)\app\*.pdb;$(SourceLocation)\app\*.pdb" />
	</ItemGroup>

	<!--
	Build the solution and copy only the necessary files to the staging folder.
	-->
	<Target Name="Build">
		<!--
		  In order to make publishing work, we have to specify locations for
		  both OutDir and WebProjectOutputDir.
		-->

		<Message Text="Clean up intermediate output folder: $(OutputFolder)"/>
		<RemoveDir Directories="$(OutputFolder)" />

		<Message Text="Clean up staging folder: $(StagingLocation)"/>
		<RemoveDir Directories="$(StagingLocation)" />

		<!-- Write revision note file. -->
		<Message Text="Notefile in $(SourceLocation)."/>
		<WriteLinesToFile File="$(SourceLocation)\$(BuildNoteFile)" Lines="Version: $(Branch);" />
		<WriteLinesToFile File="$(SourceLocation)\$(BuildNoteFile)" Lines="Revision: $(Revision)" />
		<WriteLinesToFile File="$(SourceLocation)\$(BuildNoteFile)" Lines="Build Target: $(TargetEnvironment)" />

		<Message Text="Build applications"/>

		<!-- Admin tool -->
		<MSBuild
			Projects="$(SourceLocation)\$(SolutionName)"
			Properties="Configuration=Release; Platform=Any CPU; WarningLevel=0;  OutDir=$(OutputFolder); WebProjectOutputDir=$(OutputFolder)$(AdminFolder) "
			Targets="$(AdminProjectname);"
		/>

		 <!-- Web service -->
		<MSBuild
			Projects="$(SourceLocation)\$(SolutionName)"
			Properties="Configuration=Release; Platform=Any CPU; WarningLevel=0;  OutDir=$(OutputFolder); WebProjectOutputDir=$(OutputFolder)$(WebSvcFolder) "
			Targets="$(WebSvcProjectname);"
		/>

		 <!-- CDR Preview service -->
		<MSBuild
			Projects="$(SourceLocation)\$(SolutionName)"
			Properties="Configuration=Release; Platform=Any CPU; WarningLevel=0;  OutDir=$(OutputFolder); WebProjectOutputDir=$(OutputFolder)$(CDRPreviewFolder) "
			Targets="$(CDRPreviewProjectname);"
		/>

		 <!-- Process Manager -->
		<MSBuild
			Projects="$(SourceLocation)\$(SolutionName)"
			Properties="Configuration=Release; Platform=Any CPU; WarningLevel=0;  OutDir=$(OutputFolder)$(ProcMgrFolder)\ "
			Targets="$(ProcMgrProjectname);"
		/>

		<!-- Copy built code to staging location. -->
		<RoboCopy
			SourceFolder="$(OutputFolder)$(AdminFolder)" DestinationFolder="$(StagingLocation)$(AdminFolder)"
			Mirror="True" ExcludeFiles="*.config;*.pdb;" ExcludeFolders="sharedconfig"
		/>
		<RoboCopy
			SourceFolder="$(OutputFolder)$(WebSvcFolder)" DestinationFolder="$(StagingLocation)$(WebSvcFolder)"
			Mirror="True" ExcludeFiles="*.config;*.pdb;" ExcludeFolders="sharedconfig"
		/>
		<RoboCopy
			SourceFolder="$(OutputFolder)$(CDRPreviewFolder)" DestinationFolder="$(StagingLocation)$(CDRPreviewFolder)"
			Mirror="True" ExcludeFiles="*.config;*.pdb;" ExcludeFolders="sharedconfig"
		/>
		<RoboCopy
			SourceFolder="$(OutputFolder)$(ProcMgrFolder)" DestinationFolder="$(StagingLocation)$(ProcMgrFolder)"
			Mirror="True" ExcludeFiles="*.config;*.pdb;" ExcludeFolders="sharedconfig"
		/>

		<!-- Copy XSL to staging location. -->
		<RoboCopy
			SourceFolder="$(SourceLocation)\Core\ContentRendering\XSL" DestinationFolder="$(StagingLocation)\XSL"
			Mirror="True"
		/>

		<!-- Copy Dtd to staging location -->
		<RoboCopy
			SourceFolder="$(SourceLocation)\App\Dtd" DestinationFolder="$(StagingLocation)\Dtd"
			Mirror="True"
		/>

		<!-- Copy build note to staging location -->
		<Copy SourceFiles="$(SourceLocation)\$(BuildNoteFile)" DestinationFolder ="$(StagingLocation)\$(AdminFolder)" />
		<Copy SourceFiles="$(SourceLocation)\$(BuildNoteFile)" DestinationFolder ="$(StagingLocation)\$(WebSvcFolder)" />
		<Copy SourceFiles="$(SourceLocation)\$(BuildNoteFile)" DestinationFolder ="$(StagingLocation)\$(ProcMgrFolder)" />
		<Copy SourceFiles="$(SourceLocation)\$(BuildNoteFile)" DestinationFolder ="$(StagingLocation)\$(CDRPreviewFolder)" />

		<Message Text="Debug NonDeployedFiles @(NonDeployedFiles)"/>
		<!--<Delete Files="@(NonDeployedFiles)" />-->

		<Delete Files="@(NonDeployedFiles)" />
	</Target>

  
	<Target Name="SaveExecutables">
	
		<Message Text="*********************************************" />
		<Message Text="*                                           *" />
		<Message Text="*                                           *" />
		<Message Text="*                                           *" />
		<Message Text="*  SaveExecutables is not yet implemented.  *" />
		<Message Text="*                                           *" />
		<Message Text="*                                           *" />
		<Message Text="*                                           *" />
		<Message Text="*********************************************" />
	
		<Message Text="Creating $(TempBase)\$(BuildName).zip from $(StagingLocation)" />
		<Exec Command="powershell -ExecutionPolicy RemoteSigned -NonInteractive scripts\create-zip.ps1 -sourcePath &quot;$(StagingLocation)\*&quot;  -destinationPath &quot;$(TempBase)\$(BuildName).zip&quot;" />
		
		<Message Text="Creating tag $(BuildName)." />
		<Exec Command="git tag $(BuildName) $(COMMIT_ID)" />

		<Message Text="Uploading $(BuildName).zip to GitHub" />
		<Exec Command="powershell -ExecutionPolicy RemoteSigned -NonInteractive scripts\github-release.ps1 -tagname $(BuildName) -releaseName $(BuildName) -commitId $(COMMIT_ID) -IsPreRelease -releaseNotes \&quot;Automated build $(BuildName)\&quot; -artifactDirectory &quot;$(TempBase)&quot; -artifactFileName &quot;$(BuildName).zip&quot; -gitHubUsername $(GITHUB_USER) -gitHubRepository $(GITHUB_REPO)" />
	</Target>


	<!--
		Clean up after the build completes
	-->
	<Target Name="PostBuildCleanup">
		<RemoveDir Directories="$(TempBase)" />
	</Target>
	
	<!-- This target validates properties that are expected to be passed into msbuild -->
	<Target Name="ValidateProps">
		<Error Condition=" '$(TargetEnvironment)'=='' "
				Text=" Missing required property [TargetEnvironment]" />

		<Error Condition=" '$(Branch)'=='' "
				Text=" Missing required property [Branch]" />

		<Error Condition=" '$(COMMIT_ID)'=='' "
				Text=" Missing required property [COMMIT_ID]" />

		<Error Condition=" '$(GITHUB_USER)'=='' "
				Text=" Missing required property [GITHUB_USER]" />

		<Error Condition=" '$(GITHUB_REPO)'=='' "
				Text=" Missing required property [GITHUB_REPO]" />

		<Error Condition=" '$(GITHUB_TOKEN)'=='' "
				Text=" Missing required property [GITHUB_TOKEN]" />
	</Target>

	
	<!--
		The "main" target which defines the list and order of other
		targets to be run.
	-->
	<Target Name="All" DependsOnTargets="ValidateProps">
		<CallTarget Targets="Build"/>
		<CallTarget Targets="SaveExecutables"/>
		<CallTarget Targets="PostBuildCleanup" />
	</Target>

	<Target Name="Help">
		<Message Text="To run this script, enter the command:" />
		<Message Text="" />
		<Message Text="  msbuild BuildMaster.xml /p:Branch={name} /target:All" />
		<Message Text="" />
		<Message Text="Where {name} is the specific branch to be built." />
	</Target>
  
</Project>